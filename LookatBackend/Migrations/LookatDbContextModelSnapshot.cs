// <auto-generated />
using System;
using LookatBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LookatBackend.Migrations
{
    [DbContext(typeof(LookatDbContext))]
    partial class LookatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LookatBackend.Models.Barangay", b =>
                {
                    b.Property<string>("BarangayId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BarangayLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BarangayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityMunicipality")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Purok")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BarangayId");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("LookatBackend.Models.DocumentType", b =>
                {
                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("LookatBackend.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int>("requestType")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("requestType");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("LookatBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("BarangayId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BarangayLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityMunicipality")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhysicalIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Purok")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("BarangayId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LookatBackend.Models.Request", b =>
                {
                    b.HasOne("LookatBackend.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("requestType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("LookatBackend.Models.User", b =>
                {
                    b.HasOne("LookatBackend.Models.Barangay", "Barangay")
                        .WithMany()
                        .HasForeignKey("BarangayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barangay");
                });
#pragma warning restore 612, 618
        }
    }
}
